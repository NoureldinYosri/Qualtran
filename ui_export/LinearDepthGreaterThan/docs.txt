Compare two integers.

Implements |a>|b>|t> => |a>|b>|t ⨁ (a > b)> using $4n$ T gates.

This comparator relies on the fact that (b' + a)' = b - a. If a > b, then b - a < 0. We
implement it by flipping all the bits in b, computing the first half of the addition circuit,
copying out the carry, and uncomputing the addition circuit.

#### Parameters
 - `bitsize`: Number of bits used to represent the two integers a and b.
 - `signed`: A boolean condition which controls whether the a and b registers are represented in 2's Complement or Unsigned. This effects the decomposition of the comparison because it relies on the 1's complement trick described above which only works for signed values. If the input registers are unsigned we use 2 ancilla bits to represent the registers in 2's complement. 

#### Registers
 - `a`: n-bit-sized input registers.
 - `b`: n-bit-sized input registers.
 - `target`: A single bit output register to store the result of a > b. 

#### References
 - [Halving the cost of quantum addition](https://arxiv.org/abs/1709.06648). 
 - [Improved quantum circuits for elliptic curve discrete logarithms](https://arxiv.org/abs/2306.08585). 
