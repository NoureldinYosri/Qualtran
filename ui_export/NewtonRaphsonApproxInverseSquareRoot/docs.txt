Bloq implementing a single Newton-Raphson step to approximate the inverse square root.

Given a (polynomial) approximation for $1/\sqrt{x}$ (which will be $y_0$)
below we can approximate the inverse square root by

$$
    y_{n+1} = \frac{1}{2}y_n\left(3-y_n^2 x\right)
$$

For the case of computing the Coulomb potential we want

$$
    \frac{1}{|r_i-r_j|} = \frac{1}{\sqrt{\sum_k^3 (x^{k}_i-x^{k}_j)^2}}
$$
where $x^{k}_i$ is the $i$-th electron's coordinate in 3D and $k \in \{x,y,z\}$.
Thus the input register should store $\sum_{k=x,y,z} (x^{k}_i-x^{k}_j)^2$.

#### Parameters
 - `x_sq_bitsize`: The number of bits encoding the input (integer) register holding (x^2).
 - `poly_bitsize`: The number of bits encoding the input (fp-real) register holding y0 (the output of PolynomialEvaluation).
 - `output_bitsize`: The number of bits to store the output of the NewtonRaphson step. 

#### Registers
 - `x_sq`: an input_bitsize size register storing the value x^2.
 - `poly`: an poly_bitsize size register storing the value x^2.
 - `target`: a target_bitsize size register storing the output of the newton raphson step. 

#### References
 - [Faster quantum chemistry simulation on fault-tolerant quantum     computers](https://iopscience.iop.org/article/10.1088/1367-2630/14/11/115023/meta). 
