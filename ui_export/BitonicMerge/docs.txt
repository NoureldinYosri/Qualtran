Merge two sorted sequences of n-bit integers.

Given two sorted lists of length `half_length`, merges them inplace into a single
sorted list.

Currently only supports `half_length` equal to a power of two (#1090).

If each half has length $k$, then the merge network uses $k (1+\log{k})$ comparisons
when $k$ is a power of 2. Each comparison generates one ancilla qubit which stores
the result of comparsion, and these qubits are aggregated into the `junk` register.

#### Parameters
 - `half_length`: Number of integers in each half
 - `bitsize`: value of $n$ (i.e. the inputs are $n$-bit numbers). 

#### Registers
 - `xs`: first input list of size `half_length`
 - `ys`: second input list of size `half_length`
 - `result`: merged output list of size `2 * half_length`
 - `junk`: ancilla generated by comparators.
