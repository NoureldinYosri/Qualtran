Given k n-bit numbers, for each pair that is `offset` apart, compare and swap if needed to order them.

For each block of `2 * offset` numbers, apply a `Comparator` between each pair that is `offset` apart.
For an offset of $\delta$, this requires

$$
    \delta \left\lfloor \frac{k}{2\delta} \right\rfloor
    + \max((k\mod 2\delta) - \delta, 0)
$$

totals comparisons. The above expression is at most $k / 2$. Each comparison generates one ancilla qubit
which stores the result of comparsion, and these qubits are aggregated into the `junk` register.

This is used by `BitonicMerge` to apply parallel merges with offsets 1, 2, 4 and so on.

#### Parameters
 - `k`: size of the input list.
 - `offset`: compare numbers whose indices are offset apart.
 - `bitsize`: value of $n$ (i.e. the inputs are $n$-bit numbers). 

#### Registers
 - `xs`: input list of numbers.
 - `junk`: ancilla generated by comparators.
